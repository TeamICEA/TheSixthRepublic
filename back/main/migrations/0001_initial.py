# Generated by Django 5.2.1 on 2025-06-03 13:34

import django.db.models.deletion
import pgvector.django.vector
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.PositiveIntegerField(primary_key=True, serialize=False, verbose_name='카테고리 번호')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='카테고리 명')),
                ('description', models.TextField(verbose_name='카테고리 키워드')),
            ],
            options={
                'verbose_name': '정치 카테고리',
                'verbose_name_plural': '정치 카테고리들',
                'db_table': 'categories',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Party',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False, verbose_name='정당 ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='정당 이름')),
                ('logo_url', models.URLField(blank=True, max_length=255, null=True, verbose_name='정당 로고')),
                ('tendency_vector', pgvector.django.vector.VectorField(blank=True, dimensions=10, null=True, verbose_name='정당 성향 벡터')),
                ('weight_vector', pgvector.django.vector.VectorField(blank=True, dimensions=10, null=True, verbose_name='정당 가중치 벡터')),
                ('final_vector', pgvector.django.vector.VectorField(blank=True, dimensions=10, null=True, verbose_name='정당 최종 벡터')),
                ('overall_tendency', models.FloatField(default=0.5, help_text='0~1 사이의 값 (0: 보수, 1: 진보)', verbose_name='정당 전체 성향')),
                ('bias', models.FloatField(blank=True, null=True, verbose_name='정당 성향 편향성(표준편차)')),
            ],
            options={
                'verbose_name': '정당',
                'verbose_name_plural': '정당들',
                'db_table': 'parties',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='PoliticianSimple',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
                ('hanja_name', models.CharField(max_length=50)),
                ('party_id', models.IntegerField()),
                ('birthdate', models.DateField()),
                ('address', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Tone',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, verbose_name='정치인 이름')),
                ('speech', models.TextField(verbose_name='본회의 발언')),
            ],
            options={
                'verbose_name': '정치인 말투',
                'verbose_name_plural': '정치인 말투들',
                'db_table': 'tone',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='사용자 ID(uuid4)')),
            ],
            options={
                'verbose_name': '사용자',
                'verbose_name_plural': '사용자들',
                'db_table': 'users',
            },
        ),
        migrations.CreateModel(
            name='PartyStance',
            fields=[
                ('id', models.PositiveIntegerField(primary_key=True, serialize=False, verbose_name='당 입장 인덱스')),
                ('text', models.TextField(verbose_name='정당 입장')),
                ('position_score', models.FloatField(default=0.5, help_text='0~1 사이의 값으로 정당의 입장을 나타냅니다', verbose_name='정당 입장 점수')),
                ('category', models.ForeignKey(db_column='category_id', on_delete=django.db.models.deletion.CASCADE, related_name='party_stances', to='main.category', verbose_name='카테고리')),
                ('party', models.ForeignKey(db_column='party_id', on_delete=django.db.models.deletion.CASCADE, related_name='party_stances', to='main.party', verbose_name='정당')),
            ],
            options={
                'verbose_name': '정당 입장',
                'verbose_name_plural': '정당 입장들',
                'db_table': 'party_stances',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Politician',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False, verbose_name='정치인 인덱스')),
                ('str_id', models.CharField(max_length=45, unique=True, verbose_name='정치인(의원) 고유 ID')),
                ('parties', models.CharField(blank=True, max_length=50, verbose_name='소속했었던 정당들')),
                ('name', models.CharField(max_length=50, verbose_name='이름')),
                ('hanja_name', models.CharField(blank=True, max_length=50, verbose_name='한자명')),
                ('english_name', models.CharField(blank=True, max_length=50, verbose_name='영문명')),
                ('gender', models.CharField(max_length=2, verbose_name='성별')),
                ('birthdate_type', models.CharField(max_length=2, verbose_name='양력 / 음력')),
                ('birthdate', models.DateField(verbose_name='생년월일')),
                ('job', models.CharField(blank=True, max_length=50, verbose_name='직책')),
                ('reelected', models.CharField(blank=True, max_length=4, verbose_name='선수')),
                ('tel', models.CharField(blank=True, max_length=100, verbose_name='전화번호')),
                ('email', models.EmailField(blank=True, max_length=100, null=True, verbose_name='이메일')),
                ('address', models.CharField(blank=True, max_length=100, verbose_name='주소')),
                ('boja', models.CharField(blank=True, max_length=50, verbose_name='보좌관')),
                ('top_secretary', models.CharField(blank=True, max_length=50, verbose_name='수석비서관')),
                ('secretary', models.CharField(blank=True, max_length=100, verbose_name='비서')),
                ('pic_link', models.URLField(blank=True, max_length=255, null=True, verbose_name='프로필 사진 링크')),
                ('committees', models.CharField(blank=True, max_length=255, verbose_name='소속 위원회')),
                ('profile', models.TextField(blank=True, verbose_name='경력')),
                ('books', models.TextField(blank=True, verbose_name='저서')),
                ('curr_assets', models.BigIntegerField(verbose_name='현재 자산')),
                ('bill_approved', models.TextField(blank=True, verbose_name='통과 법안')),
                ('election_name', models.CharField(blank=True, max_length=200, verbose_name='선거구명')),
                ('election_type', models.CharField(blank=True, max_length=200, verbose_name='선거구 구분')),
                ('election_gap', models.FloatField(blank=True, null=True, verbose_name='득표격차(%p)')),
                ('attendance_plenary', models.FloatField(blank=True, null=True, verbose_name='본회의 출석률')),
                ('tendency_vector', pgvector.django.vector.VectorField(blank=True, dimensions=10, null=True, verbose_name='정치인 성향 벡터')),
                ('weight_vector', pgvector.django.vector.VectorField(blank=True, dimensions=10, null=True, verbose_name='정당 가중치 벡터')),
                ('final_vector', pgvector.django.vector.VectorField(blank=True, dimensions=10, null=True, verbose_name='정치인 최종 벡터')),
                ('overall_tendency', models.FloatField(blank=True, default=0.5, help_text='0~1 사이의 값 (0: 보수, 1: 진보)', null=True, verbose_name='정치인 전체 성향')),
                ('bias', models.FloatField(blank=True, null=True, verbose_name='정치인 성향 편향성(표준편차)')),
                ('party', models.ForeignKey(db_column='party_id', on_delete=django.db.models.deletion.CASCADE, related_name='politicians', to='main.party', verbose_name='소속 정당')),
            ],
            options={
                'verbose_name': '정치인',
                'verbose_name_plural': '정치인들',
                'db_table': 'politicians',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='PoliticianReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='리포트 생성 시각')),
                ('full_text', models.TextField(verbose_name='보고서 전문')),
                ('politicians_top', models.JSONField(blank=True, default=list, help_text='rank, picture, name, birth, party, ratio, reason 포함', null=True, verbose_name='상위 정치인 TOP 10')),
                ('politicians_bottom', models.JSONField(blank=True, default=list, help_text='rank, picture, name, birth, party, ratio, reason 포함', null=True, verbose_name='하위 정치인 BOTTOM 10')),
                ('politician', models.ForeignKey(db_column='politician_id', on_delete=django.db.models.deletion.CASCADE, related_name='reports', to='main.politician', verbose_name='정치인')),
            ],
            options={
                'verbose_name': '정치인 보고서',
                'verbose_name_plural': '정치인 보고서들',
                'db_table': 'politician_reports',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.PositiveIntegerField(primary_key=True, serialize=False, verbose_name='질문 번호')),
                ('text', models.TextField(verbose_name='질문 내용')),
                ('category', models.ForeignKey(db_column='category_id', on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='main.category', verbose_name='질문 카테고리')),
            ],
            options={
                'verbose_name': '설문 질문',
                'verbose_name_plural': '설문 질문들',
                'db_table': 'questions',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Stance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position_summary', models.TextField(verbose_name='발언 요약')),
                ('position_score', models.FloatField(default=0.5, help_text='0~1 사이의 값으로 입장을 나타냅니다', verbose_name='발언 점수')),
                ('source_url', models.URLField(blank=True, max_length=500, null=True, verbose_name='뉴스 URL 주소')),
                ('category', models.ForeignKey(db_column='category_id', on_delete=django.db.models.deletion.CASCADE, related_name='stances', to='main.category', verbose_name='카테고리')),
                ('politician', models.ForeignKey(db_column='politician_str_id', on_delete=django.db.models.deletion.CASCADE, related_name='stances', to='main.politician', verbose_name='국회의원')),
            ],
            options={
                'verbose_name': '정치인 발언',
                'verbose_name_plural': '정치인 발언들',
                'db_table': 'stances',
            },
        ),
        migrations.CreateModel(
            name='Chat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='대화 생성 시각')),
                ('text', models.TextField(verbose_name='대화 내용')),
                ('user', models.ForeignKey(blank=True, db_column='user_id', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='chats', to='main.user', verbose_name='사용자')),
            ],
            options={
                'verbose_name': '정치인 말투',
                'verbose_name_plural': '정치인 말투들',
                'db_table': 'chats',
            },
        ),
        migrations.CreateModel(
            name='Response',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('survey_attempt_id', models.UUIDField(default=uuid.uuid4, verbose_name='설문 시도 ID')),
                ('survey_completed_at', models.DateTimeField(blank=True, null=True, verbose_name='설문 완료 시각')),
                ('answer', models.IntegerField(choices=[(1, '매우비동의'), (2, '비동의'), (3, '보통'), (4, '동의'), (5, '매우동의')], verbose_name='객관식 답변')),
                ('answer_text', models.TextField(blank=True, verbose_name='서술형 답변')),
                ('tendency_score', models.FloatField(default=0.5, help_text='0~1 사이의 값으로 답변의 성향을 나타냅니다', verbose_name='답변 성향 점수')),
                ('question', models.ForeignKey(db_column='question_id', on_delete=django.db.models.deletion.CASCADE, related_name='responses', to='main.question', verbose_name='질문')),
                ('user', models.ForeignKey(db_column='user_id', on_delete=django.db.models.deletion.CASCADE, related_name='responses', to='main.user', verbose_name='응답자')),
            ],
            options={
                'verbose_name': '설문 응답',
                'verbose_name_plural': '설문 응답들',
                'db_table': 'responses',
                'ordering': ['survey_completed_at', 'id'],
                'unique_together': {('survey_attempt_id', 'user', 'question')},
            },
        ),
        migrations.CreateModel(
            name='UserReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('survey_attempt_id', models.UUIDField(verbose_name='설문 시도 ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='리포트 생성 시각')),
                ('user_tendency_vector', pgvector.django.vector.VectorField(blank=True, dimensions=10, null=True, verbose_name='유저 성향 벡터')),
                ('user_weight_vector', pgvector.django.vector.VectorField(blank=True, dimensions=10, null=True, verbose_name='유저 가중치 벡터')),
                ('user_final_vector', pgvector.django.vector.VectorField(blank=True, dimensions=10, null=True, verbose_name='유저 최종 벡터')),
                ('user_overall_tendency', models.FloatField(default=0.5, help_text='0~1 사이의 값 (0: 보수, 1: 진보)', verbose_name='유저 전체 성향')),
                ('user_bias', models.FloatField(blank=True, null=True, verbose_name='유저 성향 편향성(표준편차)')),
                ('full_text', models.TextField(verbose_name='보고서 전문')),
                ('parties_rank', models.JSONField(blank=True, default=list, help_text='rank, picture, name, ratio, reason 포함', null=True, verbose_name='정당 랭킹')),
                ('politicians_top', models.JSONField(blank=True, default=list, help_text='rank, picture, name, birth, party, ratio, reason 포함', null=True, verbose_name='상위 정치인 TOP 10')),
                ('politicians_bottom', models.JSONField(blank=True, default=list, help_text='rank, picture, name, birth, party, ratio, reason 포함', null=True, verbose_name='하위 정치인 BOTTOM 10')),
                ('user', models.ForeignKey(blank=True, db_column='user_id', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='reports', to='main.user', verbose_name='사용자')),
            ],
            options={
                'verbose_name': '사용자 보고서',
                'verbose_name_plural': '사용자 보고서들',
                'db_table': 'user_reports',
                'ordering': ['-created_at'],
                'unique_together': {('user', 'survey_attempt_id')},
            },
        ),
    ]
